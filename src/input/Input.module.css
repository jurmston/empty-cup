.inputWrapper {
  display: flex;
  align-items: center;
  flex-direction: row;
  gap: var(--unit);
}

.inputWrapper.vertical {
  flex-direction: column;
  align-items: flex-start;
  gap: calc(var(--unit) / 2);
}

.input {
  border: 1px solid var(--palette--grey-300);
  background-color: var(--palette--white);
  border-radius: calc(var(--unit) / 2);
  color: var(--palette--text-primary);
  font-size: var(--typography--base-font-size);
  display: inline-flex;
  align-items: stretch;
  position: relative;
  transition:
    background-color var(--transition--duration) var(--transition--curve),
    box-shadow var(--transition--duration) var(--transition--curve),
    border-color var(--transition--duration) var(--transition--curve);
}

.inputInner {
  padding: 2px 4px;
  display: flex;
  flex: 1;
  align-items: center;
}

.input.pill {
  padding: 6px 12px;
  border-radius: calc(var(--unit) * 2);
}

.input.filled {
  background-color: var(--palette--grey-100);
}

.input.fullWidth {
  width: 100%;
}

.input.error {
  border-color: var(--palette--error);
}

.adornment {
  color: var(--palette--text-secondary);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.startAdornment {
  margin-right: calc(var(--unit) * 0.5);
}

.endAdornment {
  margin-left: calc(var(--unit) * 0.5);
}

.input.isFocused {
  background-color: var(--palette--white);
  border-color: var(--palette--primary);
  box-shadow: var(--highlight--primary);
}

.input.error:focus-within {
  border-color: var(--palette--error);
  box-shadow: var(--highlight--error);
}

.label {
  color: var(--palette--text-secondary);
  font-size: var(--typography--h6-font-size);
  font-weight: var(--typography--h6-font-weight);
  line-height: var(--typography--h6-line-height);
  letter-spacing: var(--typography--h6-letter-spacing);
  transition:
    color var(--transition--duration) var(--transition--curve),
}

.inputWrapper:focus-within > .label {
  color: var(--palette--primary-700);
}

.inputWrapper:focus-within > .label.error {
  color: var(--palette--error);
}

.label.error {
  color: var(--palette--error);
}
